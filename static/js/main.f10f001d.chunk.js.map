{"version":3,"sources":["assets/pp.jpg","logo.svg","components/Navbar.js","components/Homecard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","Item","Divider","eventKey","Component","Homecard","style","position","left","top","transform","Card","border","width","Header","Container","height","Row","Col","md","Img","margin","src","personalImage","target","url","Body","Title","Text","App","type","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,gC,4ECA3CD,EAAOC,QAAU,IAA0B,kC,qLCmC5BC,E,iLA5BP,OACI,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,QACvD,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,SAAnB,QACA,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,0BAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,yBAClB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,CAAUP,KAAK,aAAf,iBACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,YAAf,QACA,kBAACQ,EAAA,EAAD,CAAaC,MAAM,WAAWL,GAAG,2BAC/B,kBAACI,EAAA,EAAYE,KAAb,CAAkBV,KAAK,eAAvB,UACA,kBAACQ,EAAA,EAAYE,KAAb,CAAkBV,KAAK,eAAvB,kBACA,kBAACQ,EAAA,EAAYE,KAAb,CAAkBV,KAAK,eAAvB,aACA,kBAACQ,EAAA,EAAYG,QAAb,MACA,kBAACH,EAAA,EAAYE,KAAb,CAAkBV,KAAK,eAAvB,oBAGJ,kBAACK,EAAA,EAAD,KACE,kBAACA,EAAA,EAAIE,KAAL,CAAUP,KAAK,UAAf,cACA,kBAACK,EAAA,EAAIE,KAAL,CAAUK,SAAU,EAAGZ,KAAK,UAA5B,qB,GApBKa,a,yDCiCNC,E,iLA9BP,OACI,yBAAKC,MAAO,CACRC,SAAU,WAAYC,KAAM,MAAOC,IAAK,MACxCC,UAAW,0BAEf,kBAACC,EAAA,EAAD,CAAMC,OAAO,OAAON,MAAO,CAAEO,MAAO,SAChC,kBAACF,EAAA,EAAKG,OAAN,sBACA,kBAACC,EAAA,EAAD,CAAWT,MAAO,CAACU,OAAQ,SACvB,kBAACC,EAAA,EAAD,CAAKX,MAAO,CAAEU,OAAQ,QAClB,kBAACE,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACR,EAAA,EAAKS,IAAN,CAAUd,MAAO,CAACO,MAAO,OAAQQ,OAAQ,MAAOhC,QAAQ,MAAMiC,IAAKC,MACnE,kBAAC,aAAD,CAAYC,OAAO,SAASC,IAAI,yDAChC,kBAAC,aAAD,CAAYD,OAAO,SAASC,IAAI,iCAEpC,kBAACP,EAAA,EAAD,CAAKC,GAAG,KACR,kBAACR,EAAA,EAAKe,KAAN,KACI,kBAACf,EAAA,EAAKgB,MAAN,wBACA,kBAAChB,EAAA,EAAKiB,KAAN,qC,GAnBLxB,a,QCWRyB,MAVf,WACE,OACE,yBAAKhC,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAaiC,KAAK,SAAS1C,IAAI,MCAjB2C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCVNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f10f001d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pp.a31ac764.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\n\r\nimport React, {Component} from \"react\";\r\nimport {Navbar, Nav, NavDropdown, Form, FormControl, Button} from \"react-bootstrap\";\r\n\r\nclass NavBar extends Component{\r\n    render(){\r\n        return(\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"#home\">Home</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"#features\">Side Projects</Nav.Link>\r\n                <Nav.Link href=\"#pricing\">Blog</Nav.Link>\r\n                <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n                  <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                </NavDropdown>\r\n              </Nav>\r\n              <Nav>\r\n                <Nav.Link href=\"#deets\">More deets</Nav.Link>\r\n                <Nav.Link eventKey={2} href=\"#memes\">\r\n                  Dank memes\r\n                </Nav.Link>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, {Component} from \"react\";\r\nimport {Card, Button} from \"react-bootstrap\";\r\nimport {Container, Row, Col} from \"reactstrap\";\r\nimport personalImage from \"../assets/pp.jpg\";\r\nimport {SocialIcon} from \"react-social-icons\";\r\n\r\nclass Homecard extends Component{\r\n    render(){\r\n        return(\r\n            <div style={{\r\n                position: 'absolute', left: '50%', top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n            }}>\r\n            <Card border=\"dark\" style={{ width: '100%' }}>\r\n                <Card.Header>Ahed Istaitih</Card.Header>\r\n                <Container style={{height: '40vh'}}>\r\n                    <Row style={{ height: '80%'}}>\r\n                        <Col md=\"4\">\r\n                            <Card.Img style={{width: '100%', margin: '2%'}} variant=\"top\" src={personalImage} />\r\n                            <SocialIcon target=\"_blank\" url=\"https://www.linkedin.com/in/ahed-istaitih-96b67a127/\" />\r\n                            <SocialIcon target=\"_blank\" url=\"https://github.com/Batatos/\" />\r\n                        </Col>\r\n                        <Col md=\"8\">\r\n                        <Card.Body>\r\n                            <Card.Title>Dark Card Title</Card.Title>\r\n                            <Card.Text>\r\n                                Software Developer\r\n                            </Card.Text>\r\n                            </Card.Body>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Homecard;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Homecard from './components/Homecard';\nimport ParticlesBg from 'particles-bg';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Navbar />\n      <Homecard />\n      <ParticlesBg type=\"cobweb\" bg={true} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}