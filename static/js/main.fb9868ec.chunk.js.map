{"version":3,"sources":["components/Navbar.js","components/Homecard.js","components/DrawerBar.js","App.js","serviceWorker.js","index.js","assets/pp.jpg","logo.svg"],"names":["Component","Homecard","style","position","left","top","transform","Card","border","width","Header","Container","height","Row","Col","md","Img","margin","variant","src","personalImage","target","url","Body","Title","Text","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","MiniDrawer","classes","useTheme","React","useState","open","setOpen","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","noWrap","Drawer","paper","direction","Divider","List","map","text","index","ListItem","button","key","ListItemIcon","ListItemText","primary","App","type","bg","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"8OAGqBA,Y,4DCmCNC,E,iLA9BP,OACI,yBAAKC,MAAO,CACRC,SAAU,WAAYC,KAAM,MAAOC,IAAK,MACxCC,UAAW,0BAEf,kBAACC,EAAA,EAAD,CAAMC,OAAO,OAAON,MAAO,CAAEO,MAAO,SAChC,kBAACF,EAAA,EAAKG,OAAN,sBACA,kBAACC,EAAA,EAAD,CAAWT,MAAO,CAACU,OAAQ,SACvB,kBAACC,EAAA,EAAD,CAAKX,MAAO,CAAEU,OAAQ,QAClB,kBAACE,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACR,EAAA,EAAKS,IAAN,CAAUd,MAAO,CAACO,MAAO,OAAQQ,OAAQ,MAAOC,QAAQ,MAAMC,IAAKC,MACnE,kBAAC,aAAD,CAAYC,OAAO,SAASC,IAAI,yDAChC,kBAAC,aAAD,CAAYD,OAAO,SAASC,IAAI,iCAEpC,kBAACR,EAAA,EAAD,CAAKC,GAAG,KACR,kBAACR,EAAA,EAAKgB,KAAN,KACI,kBAAChB,EAAA,EAAKiB,MAAN,wBACA,kBAACjB,EAAA,EAAKkB,KAAN,qC,GAnBLzB,a,sOCgBjB0B,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,QAAS,QAEXC,OAAQ,CACNC,OAAQJ,EAAMI,OAAOC,OAAS,EAC9BC,WAAYN,EAAMO,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQT,EAAMO,YAAYE,OAAOC,MACjCC,SAAUX,EAAMO,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,WAdgB,IAehBjC,MAAM,eAAD,OAfW,IAeX,OACLyB,WAAYN,EAAMO,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQT,EAAMO,YAAYE,OAAOC,MACjCC,SAAUX,EAAMO,YAAYI,SAASI,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,KAAM,CACJhB,QAAS,QAEXG,OAAQ,CACNxB,MA5BgB,IA6BhBsC,WAAY,EACZC,WAAY,UAEdC,WAAY,CACVxC,MAjCgB,IAkChByB,WAAYN,EAAMO,YAAYC,OAAO,QAAS,CAC5CC,OAAQT,EAAMO,YAAYE,OAAOC,MACjCC,SAAUX,EAAMO,YAAYI,SAASI,kBAGzCO,YAAY,aACVhB,WAAYN,EAAMO,YAAYC,OAAO,QAAS,CAC5CC,OAAQT,EAAMO,YAAYE,OAAOC,MACjCC,SAAUX,EAAMO,YAAYI,SAASC,gBAEvCW,UAAW,SACX1C,MAAOmB,EAAMwB,QAAQ,GAAK,GACzBxB,EAAMyB,YAAYC,GAAG,MAAQ,CAC5B7C,MAAOmB,EAAMwB,QAAQ,GAAK,IAG9BG,QAAQ,aACNzB,QAAS,OACT0B,WAAY,SACZC,eAAgB,WAChBC,QAAS9B,EAAMwB,QAAQ,EAAG,IACvBxB,EAAM+B,OAAOJ,SAElBK,QAAS,CACPC,SAAU,EACVH,QAAS9B,EAAMwB,QAAQ,QAIZ,SAASU,IAAc,IAAD,IAC7BC,EAAUrC,IACVE,EAAQoC,cAFqB,EAGXC,IAAMC,UAAS,GAHJ,mBAG5BC,EAH4B,KAGtBC,EAHsB,KAanC,OACE,yBAAKC,UAAWN,EAAQlC,MACtB,kBAACyC,EAAA,EAAD,MACE,kBAACC,EAAA,EAAD,CACEpE,SAAS,QACTkE,UAAWG,YAAKT,EAAQhC,OAAT,eACZgC,EAAQtB,YAAc0B,KAGzB,kBAACM,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,cACXC,QArBa,WACvBT,GAAQ,IAqBEU,KAAK,QACLT,UAAWG,YAAKT,EAAQnB,WAAT,eACZmB,EAAQjB,KAAOqB,KAGlB,kBAAC,IAAD,OAEF,kBAACY,EAAA,EAAD,CAAY7D,QAAQ,KAAK8D,QAAM,GAA/B,+BAKN,kBAACC,EAAA,EAAD,CACE/D,QAAQ,YACRmD,UAAWG,YAAKT,EAAQ9B,QAAT,mBACZ8B,EAAQd,WAAakB,GADT,cAEZJ,EAAQb,aAAeiB,GAFX,IAIfJ,QAAS,CACPmB,MAAOV,aAAI,mBACRT,EAAQd,WAAakB,GADb,cAERJ,EAAQb,aAAeiB,GAFf,MAMb,yBAAKE,UAAWN,EAAQR,SACtB,kBAACmB,EAAA,EAAD,CAAYG,QA5CM,WACxBT,GAAQ,KA4CqB,QAApBxC,EAAMuD,UAAsB,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAGxD,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACG,CAAC,QAAS,UAAW,aAAc,UAAUC,KAAI,SAACC,EAAMC,GAAP,OAChD,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAKJ,GACpB,kBAACK,EAAA,EAAD,KAAeJ,EAAQ,IAAM,EAAI,kBAAC,IAAD,MAAgB,kBAAC,IAAD,OACjD,kBAACK,EAAA,EAAD,CAAcC,QAASP,SAI7B,kBAACH,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACG,CAAC,WAAY,QAAS,QAAQC,KAAI,SAACC,EAAMC,GAAP,OACjC,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAKJ,GACpB,kBAACK,EAAA,EAAD,KAAeJ,EAAQ,IAAM,EAAI,kBAAC,IAAD,MAAgB,kBAAC,IAAD,OACjD,kBAACK,EAAA,EAAD,CAAcC,QAASP,W,YCxItBQ,MAVf,WACE,OACE,yBAAK1B,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAa2B,KAAK,SAASC,IAAI,MCDjBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCVNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBErInBC,EAAOC,QAAU,IAA0B,gC,6ECA3CD,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.fb9868ec.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Navbar, Nav, NavDropdown, Form, FormControl, Button} from \"react-bootstrap\";\r\n\r\nclass NavBar extends Component{\r\n    render(){\r\n        return(\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"#home\">Home</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"#features\">Side Projects</Nav.Link>\r\n                <Nav.Link href=\"#pricing\">Blog</Nav.Link>\r\n                <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n                  <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                </NavDropdown>\r\n              </Nav>\r\n              <Nav>\r\n                <Nav.Link href=\"#deets\">More deets</Nav.Link>\r\n                <Nav.Link eventKey={2} href=\"#memes\">\r\n                  Dank memes\r\n                </Nav.Link>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, {Component} from \"react\";\r\nimport {Card, Button} from \"react-bootstrap\";\r\nimport {Container, Row, Col} from \"reactstrap\";\r\nimport personalImage from \"../assets/pp.jpg\";\r\nimport {SocialIcon} from \"react-social-icons\";\r\n\r\nclass Homecard extends Component{\r\n    render(){\r\n        return(\r\n            <div style={{\r\n                position: 'absolute', left: '50%', top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n            }}>\r\n            <Card border=\"dark\" style={{ width: '100%' }}>\r\n                <Card.Header>Ahed Istaitih</Card.Header>\r\n                <Container style={{height: '40vh'}}>\r\n                    <Row style={{ height: '80%'}}>\r\n                        <Col md=\"4\">\r\n                            <Card.Img style={{width: '100%', margin: '2%'}} variant=\"top\" src={personalImage} />\r\n                            <SocialIcon target=\"_blank\" url=\"https://www.linkedin.com/in/ahed-istaitih-96b67a127/\" />\r\n                            <SocialIcon target=\"_blank\" url=\"https://github.com/Batatos/\" />\r\n                        </Col>\r\n                        <Col md=\"8\">\r\n                        <Card.Body>\r\n                            <Card.Title>Dark Card Title</Card.Title>\r\n                            <Card.Text>\r\n                                Software Developer\r\n                            </Card.Text>\r\n                            </Card.Body>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Homecard;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={clsx(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              edge=\"start\"\r\n              className={clsx(classes.menuButton, {\r\n                [classes.hide]: open,\r\n              })}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" noWrap>\r\n              Ahed Istaitih - Portfolio\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n     \r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Homecard from './components/Homecard';\nimport DrawerBar from './components/DrawerBar';\nimport ParticlesBg from 'particles-bg';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <DrawerBar />\n      <Homecard />\n      <ParticlesBg type=\"cobweb\" bg={true} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pp.a31ac764.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}